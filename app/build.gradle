ext {
    TARGET_SDK = 25
    BUILD_TOOLS = "25.0.2"
    ANDROID_SUPPORT_LIBS = "25.1.1"
}

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'
apply plugin: 'com.github.dcendents.android-maven'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}


tasks.whenTaskAdded { task ->
    if (task.name.equals("lint")) {
        task.enabled = false
    } else if (task.name.equals("lintVitalRelease")) {
        task.enabled = false
    }
}

android {
    compileSdkVersion TARGET_SDK
    buildToolsVersion BUILD_TOOLS
    defaultConfig {
        applicationId 'ca.mcgill.science.ctf'
        minSdkVersion 17
        targetSdkVersion TARGET_SDK
        versionCode 3
        versionName "1.0_beta3"
        multiDexEnabled true
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    output.outputFile.name.replace("app-release.apk", "CTF-v" + versionName + ".apk"))
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }

    dexOptions {
        javaMaxHeapSize "2g"
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'

    //Framework lib with android support libraries and eventbus
    compile 'com.github.AllanWang:Capsule:69f8752d92'

    //Butterknife
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'

    compile 'com.android.volley:volley:1.0.0'
    compile 'com.github.vajro:MaterialDesignLibrary:1.6'

    compile 'com.eclipsesource.jaxrs:jersey-all:2.22.2'

    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    compile 'com.google.code.gson:gson:2.8.0'

    compile 'com.facebook.stetho:stetho:1.4.2'
    compile 'com.facebook.stetho:stetho-okhttp3:1.4.2'

    compile 'com.octo.android.robospice:robospice:1.4.14'
    compile 'com.octo.android.robospice:robospice-okhttp:1.4.14'

    compile 'com.ocpsoft:ocpsoft-pretty-time:1.0.7'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}